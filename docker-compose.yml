services:
  postgres:
    image: postgres:16
    container_name: ecommerce-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"     # External access
      - "29092:29092"   # Internal use
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    container_name: ecommerce-rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI

  admindashboard:
    build:
      context: .
      dockerfile: admindashboard/Dockerfile
      no_cache: true
    container_name: ecommerce-admindashboard
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - rabbitmq
      - postgres

  dispatcher:
    build:
      context: .
      dockerfile: dispatcher/Dockerfile
      no_cache: true
    container_name: ecommerce-dispatcher
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - rabbitmq
      - postgres

  ingester:
    build:
      context: .
      dockerfile: ingester/Dockerfile
      no_cache: true
    container_name: ecommerce-ingester
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - rabbitmq
      - postgres

  transformer:
    build:
      context: .
      dockerfile: transformer/Dockerfile
      no_cache: true
    container_name: ecommerce-transformer
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - rabbitmq
      - postgres

  order:
    build:
      context: ./order
    container_name: ecommerce-order
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - rabbitmq
      - postgres

volumes:
  pgdata:
  kafka_data:
  zookeeper_data:
